{"version":3,"sources":["index.js"],"names":["console","log","delay","ms","promise","Promise","resolve","reject","setTimeout","logger","time","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","loggerTaskTwo","table","randomIntegerFromInterval","makeTransaction","transaction","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.43389886.js","sourceRoot":"../src","sourcesContent":["// зазание 1\nconsole.log(\"задание 1\");\nconst delay = ms => {\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve(ms);\n        }, ms)\n    });\n    return promise\n};\nconst logger = time => console.log(`Resolved after ${time}ms`);\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n// задание 2\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\nsetTimeout(() => {\n    console.log(\"задание 2\");\n    const toggleUserState = (allUsers, userName) => {\n        const updatedUsers = allUsers.map(user =>\n            user.name === userName ? { ...user, active: !user.active } : user,\n        );\n        const promise = new Promise((resolve, reject) => {\n            resolve(updatedUsers);\n        });\n        return promise\n  \n    };\n    const loggerTaskTwo = updatedUsers => console.table(updatedUsers);\n    toggleUserState(users, 'Mango').then(loggerTaskTwo);\n    toggleUserState(users, 'Lux').then(loggerTaskTwo);\n\n}, 2500);\n//задание 3\nsetTimeout(() => {\n  console.log(\"задание 3\");\n  const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const makeTransaction = (transaction) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const canProcess = Math.random() > 0.3;\n        if (canProcess) {\n          resolve([transaction.id, delay]);\n        }\n        else {\n          reject(transaction.id);\n        }\n      }, delay);\n    });\n    return promise\n  };\n  //--------\n  const logSuccess = ([ id, time ]) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n}, 3500);\n\n"]}